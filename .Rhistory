add2<-function(x,y){
x+y
}
add2(3,5)
above<-function(x,n){
use<-x>n
x[use]
}
x<-1:20
above[x]
above(x,12)
above<-function(x,n=10){
above<-function(x,n=10){
use<-x>n
x[use]
}
above(x)
}
above<-function(x,n=10){
use<-x>n
x[use]
}
above(x)
columnmean<-function(y){
nc<-ncol(y)
mean<-numeric(nc)
for(i in 1:nc){
mean[i]<-mean(y[,i])
}
means
}
columnmean(airquality)
columnmean<-function(y){
nc<-ncol(y)
means<-numeric(nc)
for(i in 1:nc){
mean[i]<-mean(y[,i])
}
means
}
column(airquality)
columnmean(airquality)
`001` <- read.csv("~/Documents/Data Science/R Programming/specdata/001.csv")
View(`001`)
setwd("~/Documents/Data Science/Reproducible Research/RepData_PeerAssessment1")
echo = TRUE
unzip(zipfile = "activity.zip")
data <- read.csv("activity.csv")
library(ggplot2)
daysteps <- tapply(data$steps, data$date, FUN = sum, na.rm = TRUE)
qplot(daysteps, binwidth = 1000, xlab = "total number of steps taken each day")
mean(daysteps, na.rm=TRUE)
median(daysteps, na.rm=TRUE)
averagesteps <- aggregate(x = list(steps = data$steps), by = list(interval = data$interval), FUN = mean, na.rm = TRUE)
ggplot(data = averagesteps, aes(x = interval, y = steps)) + geom_line() + xlab("5-minute interval") + ylab("average number of steps taken")
ggplot(data = averagesteps, aes(x = interval, y = steps)), geom_line(), labs(title = "Time Series Plot of the 5-minute Interval", x = "5-minute interval", y = "average number of steps taken")
ggplot(data = averagesteps, aes(x = interval, y = steps)) geom_line(), labs(title = "Time Series Plot of the 5-minute Interval", x = "5-minute interval", y = "average number of steps taken")
ggplot(data = averagesteps, aes(x = interval, y = steps)) + geom_line(), labs(title = "Time Series Plot of the 5-minute Interval", x = "5-minute interval", y = "average number of steps taken")
ggplot(data = averagesteps, aes(x = interval, y = steps)) + geom_line() + labs(title = "Time Series Plot of the 5-minute Interval", x = "5-minute interval", y = "average number of steps taken")
names(averagesteps)[2] <- "meansteps"
averagesteps[averagesteps$meansteps == max(averagesteps$meansteps),  ]
sum(is.na(data))
missing <- is.na(data$steps)
table(missing)
fullfilldata <- data
for (i in 1:nrow(fullfilldata)) {
if (is.na(fullfilldata$steps[i])) {
fullfilldata$steps[i] <- averagesteps[which(fullfilldata$interval[i] == averagesteps$interval), ]$meansteps
}
}
head(fullfilldata)
sum(is.na(fullfilldata))
daysteps <- tapply(fullfilldata$steps, fullfilldata$date, FUN = sum, na.rm = TRUE)
qplot(daysteps, binwidth=1000, xlab="total number of steps taken each day")
mean(daysteps)
median(daysteps)
weekdayend <- function(date){
dayweek <- weekdays(date)
if (dayweek %in% c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday")) {
return("weekday")
}
else if (dayweek %in% c("Saturday", "Sunday")){
return("weekend")
}
else {
stop("invalid date")
}
}
fullfilldata$date <- as.Date(fullfilldata$date)
fullfilldata$day <- sapply(fullfilldata$date, FUN = weekdayend)
averagesteps <- aggregate(fullfilldata$steps, list(interval = as.numeric(as.character(fullfilldata$interval)), FUN = "mean"))
averagesteps <- aggregate(fullfilldata$steps, list(interval = as.numeric(as.character(fullfilldata$interval)), FUN = mean))
aggregate
as.numeric
averagesteps <- aggregate(steps ~ interval + day, data = fullfilldata, mean)
ggplot(averagesteps, aes(interval, steps)) + geom_line() + facet_grid(day ~ .) + xlab("5-minute interval") + ylab("Number of steps")
install.packages("knitr")
